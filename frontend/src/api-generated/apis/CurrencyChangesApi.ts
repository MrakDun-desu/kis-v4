/* tslint:disable */
/* eslint-disable */
/**
 * KISv4 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  HttpValidationProblemDetails,
  PageOfCurrencyChangeListModel,
} from '../models/index';
import {
    HttpValidationProblemDetailsFromJSON,
    HttpValidationProblemDetailsToJSON,
    PageOfCurrencyChangeListModelFromJSON,
    PageOfCurrencyChangeListModelToJSON,
} from '../models/index';

export interface CurrencyChangesGetRequest {
    page?: number;
    pageSize?: number;
    accountId?: number;
    cancelled?: boolean;
    startDate?: Date;
    endDate?: Date;
}

/**
 * 
 */
export class CurrencyChangesApi extends runtime.BaseAPI {

    /**
     */
    async currencyChangesGetRaw(requestParameters: CurrencyChangesGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<PageOfCurrencyChangeListModel>> {
        const queryParameters: any = {};

        if (requestParameters['page'] != null) {
            queryParameters['page'] = requestParameters['page'];
        }

        if (requestParameters['pageSize'] != null) {
            queryParameters['pageSize'] = requestParameters['pageSize'];
        }

        if (requestParameters['accountId'] != null) {
            queryParameters['accountId'] = requestParameters['accountId'];
        }

        if (requestParameters['cancelled'] != null) {
            queryParameters['cancelled'] = requestParameters['cancelled'];
        }

        if (requestParameters['startDate'] != null) {
            queryParameters['startDate'] = (requestParameters['startDate'] as any).toISOString();
        }

        if (requestParameters['endDate'] != null) {
            queryParameters['endDate'] = (requestParameters['endDate'] as any).toISOString();
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/currency-changes`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => PageOfCurrencyChangeListModelFromJSON(jsonValue));
    }

    /**
     */
    async currencyChangesGet(requestParameters: CurrencyChangesGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<PageOfCurrencyChangeListModel> {
        const response = await this.currencyChangesGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
