/* tslint:disable */
/* eslint-disable */
/**
 * App | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  DiscountCreateModel,
  DiscountDetailModel,
  DiscountListModel,
  HttpValidationProblemDetails,
} from '../models/index';
import {
    DiscountCreateModelFromJSON,
    DiscountCreateModelToJSON,
    DiscountDetailModelFromJSON,
    DiscountDetailModelToJSON,
    DiscountListModelFromJSON,
    DiscountListModelToJSON,
    HttpValidationProblemDetailsFromJSON,
    HttpValidationProblemDetailsToJSON,
} from '../models/index';

export interface DiscountReadRequest {
    id: number;
}

export interface DiscountsGetRequest {
    deleted?: boolean;
}

export interface DiscountsIdDeleteRequest {
    id: number;
}

export interface DiscountsIdPutRequest {
    id: number;
}

export interface DiscountsPostRequest {
    discountCreateModel: DiscountCreateModel;
}

/**
 * 
 */
export class DiscountsApi extends runtime.BaseAPI {

    /**
     */
    async discountReadRaw(requestParameters: DiscountReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DiscountDetailModel>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling discountRead().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/discounts/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DiscountDetailModelFromJSON(jsonValue));
    }

    /**
     */
    async discountRead(requestParameters: DiscountReadRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DiscountDetailModel> {
        const response = await this.discountReadRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async discountsGetRaw(requestParameters: DiscountsGetRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<Array<DiscountListModel>>> {
        const queryParameters: any = {};

        if (requestParameters['deleted'] != null) {
            queryParameters['deleted'] = requestParameters['deleted'];
        }

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/discounts`;

        const response = await this.request({
            path: urlPath,
            method: 'GET',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => jsonValue.map(DiscountListModelFromJSON));
    }

    /**
     */
    async discountsGet(requestParameters: DiscountsGetRequest = {}, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<Array<DiscountListModel>> {
        const response = await this.discountsGetRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async discountsIdDeleteRaw(requestParameters: DiscountsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DiscountDetailModel>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling discountsIdDelete().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/discounts/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'DELETE',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DiscountDetailModelFromJSON(jsonValue));
    }

    /**
     */
    async discountsIdDelete(requestParameters: DiscountsIdDeleteRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DiscountDetailModel> {
        const response = await this.discountsIdDeleteRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async discountsIdPutRaw(requestParameters: DiscountsIdPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DiscountDetailModel>> {
        if (requestParameters['id'] == null) {
            throw new runtime.RequiredError(
                'id',
                'Required parameter "id" was null or undefined when calling discountsIdPut().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/discounts/{id}`;
        urlPath = urlPath.replace(`{${"id"}}`, encodeURIComponent(String(requestParameters['id'])));

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DiscountDetailModelFromJSON(jsonValue));
    }

    /**
     */
    async discountsIdPut(requestParameters: DiscountsIdPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DiscountDetailModel> {
        const response = await this.discountsIdPutRaw(requestParameters, initOverrides);
        return await response.value();
    }

    /**
     */
    async discountsPostRaw(requestParameters: DiscountsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<DiscountDetailModel>> {
        if (requestParameters['discountCreateModel'] == null) {
            throw new runtime.RequiredError(
                'discountCreateModel',
                'Required parameter "discountCreateModel" was null or undefined when calling discountsPost().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/discounts`;

        const response = await this.request({
            path: urlPath,
            method: 'POST',
            headers: headerParameters,
            query: queryParameters,
            body: DiscountCreateModelToJSON(requestParameters['discountCreateModel']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => DiscountDetailModelFromJSON(jsonValue));
    }

    /**
     */
    async discountsPost(requestParameters: DiscountsPostRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<DiscountDetailModel> {
        const response = await this.discountsPostRaw(requestParameters, initOverrides);
        return await response.value();
    }

}
