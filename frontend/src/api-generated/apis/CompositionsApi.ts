/* tslint:disable */
/* eslint-disable */
/**
 * App | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


import * as runtime from '../runtime';
import type {
  CompositionCreateModel,
  CompositionListModel,
  HttpValidationProblemDetails,
} from '../models/index';
import {
    CompositionCreateModelFromJSON,
    CompositionCreateModelToJSON,
    CompositionListModelFromJSON,
    CompositionListModelToJSON,
    HttpValidationProblemDetailsFromJSON,
    HttpValidationProblemDetailsToJSON,
} from '../models/index';

export interface CompositionsPutRequest {
    compositionCreateModel: CompositionCreateModel;
}

/**
 * 
 */
export class CompositionsApi extends runtime.BaseAPI {

    /**
     */
    async compositionsPutRaw(requestParameters: CompositionsPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<runtime.ApiResponse<CompositionListModel>> {
        if (requestParameters['compositionCreateModel'] == null) {
            throw new runtime.RequiredError(
                'compositionCreateModel',
                'Required parameter "compositionCreateModel" was null or undefined when calling compositionsPut().'
            );
        }

        const queryParameters: any = {};

        const headerParameters: runtime.HTTPHeaders = {};

        headerParameters['Content-Type'] = 'application/json';

        if (this.configuration && this.configuration.accessToken) {
            const token = this.configuration.accessToken;
            const tokenString = await token("Bearer", []);

            if (tokenString) {
                headerParameters["Authorization"] = `Bearer ${tokenString}`;
            }
        }

        let urlPath = `/compositions`;

        const response = await this.request({
            path: urlPath,
            method: 'PUT',
            headers: headerParameters,
            query: queryParameters,
            body: CompositionCreateModelToJSON(requestParameters['compositionCreateModel']),
        }, initOverrides);

        return new runtime.JSONApiResponse(response, (jsonValue) => CompositionListModelFromJSON(jsonValue));
    }

    /**
     */
    async compositionsPut(requestParameters: CompositionsPutRequest, initOverrides?: RequestInit | runtime.InitOverrideFunction): Promise<CompositionListModel | null | undefined > {
        const response = await this.compositionsPutRaw(requestParameters, initOverrides);
        switch (response.raw.status) {
            case 200:
                return await response.value();
            case 204:
                return null;
            default:
                return await response.value();
        }
    }

}
