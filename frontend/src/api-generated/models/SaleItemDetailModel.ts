/* tslint:disable */
/* eslint-disable */
/**
 * App | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CompositionListModel } from './CompositionListModel';
import {
    CompositionListModelFromJSON,
    CompositionListModelFromJSONTyped,
    CompositionListModelToJSON,
    CompositionListModelToJSONTyped,
} from './CompositionListModel';
import type { CategoryListModel } from './CategoryListModel';
import {
    CategoryListModelFromJSON,
    CategoryListModelFromJSONTyped,
    CategoryListModelToJSON,
    CategoryListModelToJSONTyped,
} from './CategoryListModel';
import type { ModifierListModel } from './ModifierListModel';
import {
    ModifierListModelFromJSON,
    ModifierListModelFromJSONTyped,
    ModifierListModelToJSON,
    ModifierListModelToJSONTyped,
} from './ModifierListModel';
import type { CostListModel } from './CostListModel';
import {
    CostListModelFromJSON,
    CostListModelFromJSONTyped,
    CostListModelToJSON,
    CostListModelToJSONTyped,
} from './CostListModel';

/**
 * 
 * @export
 * @interface SaleItemDetailModel
 */
export interface SaleItemDetailModel {
    /**
     * 
     * @type {number}
     * @memberof SaleItemDetailModel
     */
    id: number;
    /**
     * 
     * @type {string}
     * @memberof SaleItemDetailModel
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof SaleItemDetailModel
     */
    image: string;
    /**
     * 
     * @type {boolean}
     * @memberof SaleItemDetailModel
     */
    deleted: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SaleItemDetailModel
     */
    showOnWeb: boolean;
    /**
     * 
     * @type {Array<CategoryListModel>}
     * @memberof SaleItemDetailModel
     */
    categories: Array<CategoryListModel>;
    /**
     * 
     * @type {Array<CompositionListModel>}
     * @memberof SaleItemDetailModel
     */
    composition: Array<CompositionListModel>;
    /**
     * 
     * @type {Array<ModifierListModel>}
     * @memberof SaleItemDetailModel
     */
    availableModifiers: Array<ModifierListModel>;
    /**
     * 
     * @type {Array<CostListModel>}
     * @memberof SaleItemDetailModel
     */
    costs: Array<CostListModel>;
}

/**
 * Check if a given object implements the SaleItemDetailModel interface.
 */
export function instanceOfSaleItemDetailModel(value: object): value is SaleItemDetailModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('image' in value) || value['image'] === undefined) return false;
    if (!('deleted' in value) || value['deleted'] === undefined) return false;
    if (!('showOnWeb' in value) || value['showOnWeb'] === undefined) return false;
    if (!('categories' in value) || value['categories'] === undefined) return false;
    if (!('composition' in value) || value['composition'] === undefined) return false;
    if (!('availableModifiers' in value) || value['availableModifiers'] === undefined) return false;
    if (!('costs' in value) || value['costs'] === undefined) return false;
    return true;
}

export function SaleItemDetailModelFromJSON(json: any): SaleItemDetailModel {
    return SaleItemDetailModelFromJSONTyped(json, false);
}

export function SaleItemDetailModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): SaleItemDetailModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'image': json['image'],
        'deleted': json['deleted'],
        'showOnWeb': json['showOnWeb'],
        'categories': ((json['categories'] as Array<any>).map(CategoryListModelFromJSON)),
        'composition': ((json['composition'] as Array<any>).map(CompositionListModelFromJSON)),
        'availableModifiers': ((json['availableModifiers'] as Array<any>).map(ModifierListModelFromJSON)),
        'costs': ((json['costs'] as Array<any>).map(CostListModelFromJSON)),
    };
}

export function SaleItemDetailModelToJSON(json: any): SaleItemDetailModel {
    return SaleItemDetailModelToJSONTyped(json, false);
}

export function SaleItemDetailModelToJSONTyped(value?: SaleItemDetailModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'name': value['name'],
        'image': value['image'],
        'deleted': value['deleted'],
        'showOnWeb': value['showOnWeb'],
        'categories': ((value['categories'] as Array<any>).map(CategoryListModelToJSON)),
        'composition': ((value['composition'] as Array<any>).map(CompositionListModelToJSON)),
        'availableModifiers': ((value['availableModifiers'] as Array<any>).map(ModifierListModelToJSON)),
        'costs': ((value['costs'] as Array<any>).map(CostListModelToJSON)),
    };
}

