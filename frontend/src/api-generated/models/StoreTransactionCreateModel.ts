/* tslint:disable */
/* eslint-disable */
/**
 * KISv4 API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StoreTransactionItemCreateModel } from './StoreTransactionItemCreateModel';
import {
    StoreTransactionItemCreateModelFromJSON,
    StoreTransactionItemCreateModelFromJSONTyped,
    StoreTransactionItemCreateModelToJSON,
    StoreTransactionItemCreateModelToJSONTyped,
} from './StoreTransactionItemCreateModel';

/**
 * 
 * @export
 * @interface StoreTransactionCreateModel
 */
export interface StoreTransactionCreateModel {
    /**
     * 
     * @type {Array<StoreTransactionItemCreateModel>}
     * @memberof StoreTransactionCreateModel
     */
    storeTransactionItems: Array<StoreTransactionItemCreateModel>;
    /**
     * 
     * @type {number}
     * @memberof StoreTransactionCreateModel
     */
    transactionReason: number;
    /**
     * 
     * @type {number}
     * @memberof StoreTransactionCreateModel
     */
    storeId: number;
    /**
     * 
     * @type {number}
     * @memberof StoreTransactionCreateModel
     */
    destinationStoreId: number | null;
    /**
     * 
     * @type {string}
     * @memberof StoreTransactionCreateModel
     */
    note?: string | null;
}

/**
 * Check if a given object implements the StoreTransactionCreateModel interface.
 */
export function instanceOfStoreTransactionCreateModel(value: object): value is StoreTransactionCreateModel {
    if (!('storeTransactionItems' in value) || value['storeTransactionItems'] === undefined) return false;
    if (!('transactionReason' in value) || value['transactionReason'] === undefined) return false;
    if (!('storeId' in value) || value['storeId'] === undefined) return false;
    if (!('destinationStoreId' in value) || value['destinationStoreId'] === undefined) return false;
    return true;
}

export function StoreTransactionCreateModelFromJSON(json: any): StoreTransactionCreateModel {
    return StoreTransactionCreateModelFromJSONTyped(json, false);
}

export function StoreTransactionCreateModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreTransactionCreateModel {
    if (json == null) {
        return json;
    }
    return {
        
        'storeTransactionItems': ((json['storeTransactionItems'] as Array<any>).map(StoreTransactionItemCreateModelFromJSON)),
        'transactionReason': json['transactionReason'],
        'storeId': json['storeId'],
        'destinationStoreId': json['destinationStoreId'],
        'note': json['note'] == null ? undefined : json['note'],
    };
}

export function StoreTransactionCreateModelToJSON(json: any): StoreTransactionCreateModel {
    return StoreTransactionCreateModelToJSONTyped(json, false);
}

export function StoreTransactionCreateModelToJSONTyped(value?: StoreTransactionCreateModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'storeTransactionItems': ((value['storeTransactionItems'] as Array<any>).map(StoreTransactionItemCreateModelToJSON)),
        'transactionReason': value['transactionReason'],
        'storeId': value['storeId'],
        'destinationStoreId': value['destinationStoreId'],
        'note': value['note'],
    };
}

