/* tslint:disable */
/* eslint-disable */
/**
 * App | v1
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { StoreListModel } from './StoreListModel';
import {
    StoreListModelFromJSON,
    StoreListModelFromJSONTyped,
    StoreListModelToJSON,
    StoreListModelToJSONTyped,
} from './StoreListModel';
import type { StoreItemListModel } from './StoreItemListModel';
import {
    StoreItemListModelFromJSON,
    StoreItemListModelFromJSONTyped,
    StoreItemListModelToJSON,
    StoreItemListModelToJSONTyped,
} from './StoreItemListModel';

/**
 * 
 * @export
 * @interface StoreTransactionItemListModel
 */
export interface StoreTransactionItemListModel {
    /**
     * 
     * @type {number}
     * @memberof StoreTransactionItemListModel
     */
    id: number;
    /**
     * 
     * @type {StoreItemListModel}
     * @memberof StoreTransactionItemListModel
     */
    storeItem: StoreItemListModel;
    /**
     * 
     * @type {StoreListModel}
     * @memberof StoreTransactionItemListModel
     */
    store: StoreListModel;
    /**
     * 
     * @type {number}
     * @memberof StoreTransactionItemListModel
     */
    storeTransactionId: number;
    /**
     * 
     * @type {number}
     * @memberof StoreTransactionItemListModel
     */
    itemAmount: number;
    /**
     * 
     * @type {boolean}
     * @memberof StoreTransactionItemListModel
     */
    cancelled: boolean;
}

/**
 * Check if a given object implements the StoreTransactionItemListModel interface.
 */
export function instanceOfStoreTransactionItemListModel(value: object): value is StoreTransactionItemListModel {
    if (!('id' in value) || value['id'] === undefined) return false;
    if (!('storeItem' in value) || value['storeItem'] === undefined) return false;
    if (!('store' in value) || value['store'] === undefined) return false;
    if (!('storeTransactionId' in value) || value['storeTransactionId'] === undefined) return false;
    if (!('itemAmount' in value) || value['itemAmount'] === undefined) return false;
    if (!('cancelled' in value) || value['cancelled'] === undefined) return false;
    return true;
}

export function StoreTransactionItemListModelFromJSON(json: any): StoreTransactionItemListModel {
    return StoreTransactionItemListModelFromJSONTyped(json, false);
}

export function StoreTransactionItemListModelFromJSONTyped(json: any, ignoreDiscriminator: boolean): StoreTransactionItemListModel {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'storeItem': StoreItemListModelFromJSON(json['storeItem']),
        'store': StoreListModelFromJSON(json['store']),
        'storeTransactionId': json['storeTransactionId'],
        'itemAmount': json['itemAmount'],
        'cancelled': json['cancelled'],
    };
}

export function StoreTransactionItemListModelToJSON(json: any): StoreTransactionItemListModel {
    return StoreTransactionItemListModelToJSONTyped(json, false);
}

export function StoreTransactionItemListModelToJSONTyped(value?: StoreTransactionItemListModel | null, ignoreDiscriminator: boolean = false): any {
    if (value == null) {
        return value;
    }

    return {
        
        'id': value['id'],
        'storeItem': StoreItemListModelToJSON(value['storeItem']),
        'store': StoreListModelToJSON(value['store']),
        'storeTransactionId': value['storeTransactionId'],
        'itemAmount': value['itemAmount'],
        'cancelled': value['cancelled'],
    };
}

